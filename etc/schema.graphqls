type Query {
    MpCustomerAttributes(
        filter: MpCustomerAttributesFilterInput @doc(description: "Identifies which customer attributes to search for and return.")
        pageSize: Int = 5 @doc(description: "How many items should show on the page?")
        currentPage: Int = 1 @doc(description: "Allow page number to start with 1")
    ):MpAttributesOutput @resolver(class: "Mageplaza\\CustomerAttributesGraphQl\\Model\\Resolver\\Attribute\\CustomerAttributes") @doc(description: "The query searches for customer attributes that match the criteria specified in the filter.")
    MpCustomerAddressAttributes(
        filter: MpCustomerAttributesFilterInput @doc(description: "Identifies which customer address attributes to search for and return.")
        pageSize: Int = 5 @doc(description: "How many items should show on the page?")
        currentPage: Int = 1 @doc(description: "Allow page number to start with 1")
    ):MpAttributesOutput @resolver(class: "Mageplaza\\CustomerAttributesGraphQl\\Model\\Resolver\\Attribute\\CustomerAddressAttributes") @doc(description: "The query searches for customer address attributes that match the criteria specified in the filter.")
}

input MpCustomerAttributesFilterInput {
    attribute_id: FilterTypeInput @doc(description: "Attribute Id")
    attribute_code: FilterTypeInput @doc(description: "Attribute Code")
    backend_type: FilterTypeInput @doc(description: "Backend Type")
    frontend_input: FilterTypeInput @doc(description: "Frontend Input")
    frontend_label: FilterTypeInput @doc(description: "Frontend Label")
    is_required: FilterTypeInput @doc(description: "Required")
    default_value: FilterTypeInput @doc(description: "Default Value")
    input_filter: FilterTypeInput @doc(description: "Input Filter")
    frontend_class: FilterTypeInput @doc(description: "Frontend Class")
    note: FilterTypeInput @doc(description: "Note")
    visible: FilterTypeInput @doc(description: "Visible")
    sort_order: FilterTypeInput @doc(description: "Sort Order")
    is_used_in_grid: FilterTypeInput @doc(description: "Is Used In Grid")
    is_used_in_sales_order_grid: FilterTypeInput @doc(description: "Is Used Sales Order Grid")
    field_depend: FilterTypeInput @doc(description: "Field Depend")
    value_depend: FilterTypeInput @doc(description: "Value Depend")
    customer_can_edit: FilterTypeInput @doc(description: "Customer Can Edit")
    mp_store_id: FilterTypeInput @doc(description: "Store Id")
    mp_customer_group: FilterTypeInput @doc(description: "Customer Group")
    mp_created_date: FilterTypeInput @doc(description: "Created Date")
    additional_data: FilterTypeInput @doc(description: "Additional Data")
    max_file_size: FilterTypeInput @doc(description: "Max File Size")
    file_extensions: FilterTypeInput @doc(description: "File extensions")
}
type MpAttributesOutput {
    total_count: Int @doc(description: "The total number of results returned when a query is applied"),
    items: [MpAttributes] @doc(description: "Order attributes data is satisfied")
}

type MpAttributes {
    attribute_id: Int @doc(description: "Attribute Id")
    attribute_code: String @doc(description: "Attribute Code")
    store_label: String @doc(description: "Store Label")
    backend_type: String @doc(description: "Backend Type")
    frontend_input: String @doc(description: "Frontend Input")
    frontend_label: String @doc(description: "Frontend Label")
    frontend_class: String @doc(description: "Frontend Class")
    is_required: Boolean @doc(description: "Is Required")
    user_defined: Boolean @doc(description: "User Defined")
    default_value: String @doc(description: "Default Value")
    note: String @doc(description: "Note")
    visible: Boolean @doc(description: "Visible")
    input_filter: String @doc(description: "Input Filter")
    multiline_count: Int @doc(description: "Multiline Count")
    validation_rules: [ValidationRulesOutput] @doc(description: "Validation Rules")
    system: Boolean @doc(description: "System")
    sort_order: Int @doc(description: "Sort Order")
    data_model: String @doc(description: "Data Model")
    is_used_in_grid: Boolean @doc(description: "Is Used In Grid")
    is_visible_in_grid: Boolean @doc(description: "Is Visible In Grid")
    is_filterable_in_grid: Boolean @doc(description: "Is Filterable In Grid")
    is_searchable_in_grid: Boolean @doc(description: "Is Searchable In Grid")
    is_used_in_sales_order_grid: Boolean @doc(description: "Is Used In Sales Order Grid")
    field_depend: String @doc(description: "Field Depend")
    value_depend: String @doc(description: "Value Depend")
    customer_can_edit: Int @doc(description: "Customer Can Edit")
    mp_store_id: String @doc(description: "Mp Store Id")
    mp_customer_group: String @doc(description: "Mp Customer Group")
    mp_created_date: String @doc(description: "Mp Created Date")
    additional_data: String @doc(description: "Additional Data")
    max_file_size: String @doc(description: "Max File Size")
    file_extensions: String @doc(description: "File Extensions")
    options: [AttributeOptions] @doc(description: "Options")
}

type AttributeOptions {
    label: String @doc(description: "Label")
    value: String @doc(description: "Value")
    options: [AttributeOptions] @doc(description: "Options")
}

type ValidationRulesOutput {
    name: String @doc(description: "Validation Rule Name")
    value: String @doc(description: "Validation Rule Value")
}
